require "cs2lua__utility";
require "cs2lua__namespaces";
require "LuaString";

MyScript = {
	cctor = function()
	end,


	__new_object = function(...)
		return newobject(MyScript, nil, {}, ...);
	end,
	__define_class = function()
		local static = MyScript;
		local static_props = nil;
		local static_events = nil;

		local instance_methods = {
			Init = function(this, obj)
				local s = wrapstring("test test test from cs2lua !");
				UnityEngine.Debug.Log(s);
				this.root = newexternobject(UnityEngine.GameObject, "UnityEngine.GameObject", "ctor", nil, {}, wrapstring("root"));
				local slider = typecast(UnityEngine.GameObject.Find(wrapstring("Canvas/Slider")):GetComponent(UnityEngine.UI.Slider), UnityEngine.UI.Slider);
				local counttxt = typecast(UnityEngine.GameObject.Find(wrapstring("Canvas/Count")):GetComponent(UnityEngine.UI.Text), UnityEngine.UI.Text);
				slider.onValueChanged:AddListener((function(v)
					this:Reset();
					counttxt.text = LuaString.Format(wrapstring("cube:{0}"), v);
					this.max = typecast(v, System.Int32);
				end));
				this:Reset();
			end,
			Update = function(this)
				local i = 0;
				while (i < this.cubes.Length) do
					local offset = condexp(((i % 2) == 1), 5, -5);
					local nr = (this.r + (UnityEngine.Mathf.Sin(UnityEngine.Time.time) * offset));
					local angle = condexp(((i % 2) == 1), UnityEngine.Time.time, -5);
					local b = newexternobject(UnityEngine.Vector3, "UnityEngine.Vector3", "ctor", nil, {}, typecast(( (UnityEngine.Mathf.Cos(((((i * 3.141593) * 2) / this.max) + angle)) * nr) ), System.Single), typecast(( (UnityEngine.Mathf.Sin(((((i * 3.141593) * 2) / this.max) + angle)) * nr) ), System.Single), 0);
					this.cubes[i + 1].transform.position = b;
					i = i + 1;
				end;
				if ((this.fogStart <= 0) or (this.t > 1)) then
					this.fogStart = UnityEngine.Time.time;
					this.bgCurrent = UnityEngine.Camera.main.backgroundColor;
					local ix = UnityEngine.Random.Range(0, this.colors.Length);
					this.bgColor = this.colors[ix + 1];
				end;
				this.t = (( (UnityEngine.Time.time - this.fogStart) ) / 10);
				UnityEngine.Camera.main.backgroundColor = UnityEngine.Color.Lerp(this.bgCurrent, this.bgColor, this.t);
			end,
			Call = function(this, name, ...)
				local args = wraparray{...};
			end,
			Reset = function(this)
				if (nil ~= this.cubes) then
					local i = 0;
					while (i < this.cubes.Length) do
						UnityEngine.Object.Destroy(this.cubes[i + 1]);
						i = i + 1;
					end;
				end;
				this.cubes = wraparray{};
				local P = UnityEngine.Resources.Load(wrapstring("Particle System"));
				local i = 0;
				while (i < this.max) do
					local cube = UnityEngine.GameObject.CreatePrimitive(3);
					cube.transform.position = newexternobject(UnityEngine.Vector3, "UnityEngine.Vector3", "ctor", nil, {}, (typecast(UnityEngine.Mathf.Cos((((i * 3.141593) * 2) / this.max)), System.Single) * this.r), (typecast(UnityEngine.Mathf.Sin((((i * 3.141593) * 2) / this.max)), System.Single) * this.r), 0);
					cube.transform:SetParent(this.root.transform);
					local mat = cube:GetComponent(UnityEngine.Renderer).material;
					local box = cube:GetComponent(UnityEngine.BoxCollider);
					UnityEngine.Object.Destroy(box);
					local p = typecast(UnityEngine.Object.Instantiate(P, UnityEngine.Vector3.zero, UnityEngine.Quaternion.identity), UnityEngine.GameObject);
					p.transform:SetParent(cube.transform);
					local ix = UnityEngine.Random.Range(0, this.colors.Length);
					mat.color = this.colors[ix + 1];
					this.cubes[i + 1] = cube;
					i = i + 1;
				end;
			end,
			ctor = function(this)
			end,
		};

		local instance_build = function()
			local instance = {
				root = nil,
				r = 10,
				max = 400,
				t = 0,
				fogStart = 0,
				bgCurrent = nil,
				bgColor = nil,
				cubes = nil,
				colors = wraparray{UnityEngine.Color.red, UnityEngine.Color.blue, UnityEngine.Color.green, UnityEngine.Color.cyan, UnityEngine.Color.grey, UnityEngine.Color.white, UnityEngine.Color.yellow, UnityEngine.Color.magenta, UnityEngine.Color.black},
			};
			for k,v in pairs(instance_methods) do
				instance[k] = v;
			end;
			return instance;
		end;
		local instance_props = nil;
		local instance_events = nil;

		return defineclass(nil, static, static_props, static_events, instance_build, instance_props, instance_events);
	end,
};


MyScript.__define_class();

