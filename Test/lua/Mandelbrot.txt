--local write = io.write;
require "cs2lua__utility";
require "cs2lua__namespaces";

Mandelbrot = {
	Exec = function()
		local width = 50;
		local height = width;
		local maxiter = 50;
		local limit = 4;
		LuaConsole.Write("P4\n", width, " ", height, "\n");
		local y = 0;
		while (y < height) do
			local Ci = (((2 * y) / height) - 1);
			local x = 0;
			while (x < width) do
				local Zr = 0;
				local Zi = 0;
				local Cr = (((2 * x) / width) - 1.5);
				local i = maxiter;
				local isInside = true;
				repeat
					local Tr = (((Zr * Zr) - (Zi * Zi)) + Cr);
					Zi = (((2 * Zr) * Zi) + Ci);
					Zr = Tr;
					if (((Zr * Zr) + (Zi * Zi)) > limit) then
						isInside = false;
						break;
					end;
				until not (((function() i = i - 1; return i; end)() > 0));
				if isInside then
					LuaConsole.Write("*");
				else
					LuaConsole.Write(" ");
				end;
				x = x + 1;
			end;
			LuaConsole.Print();
			y = y + 1;
		end;
	end,
	cctor = function()
	end,


	__new_object = function(...)
		return newobject(Mandelbrot, nil, {}, ...);
	end,
	__define_class = function()
		local static = Mandelbrot;

		local static_props = {
		};

		local static_events = {
		};

		local instance = {
			ctor = function(this)
			end,

		};

		local instance_props = {
		};

		local instance_events = {
		};

		return defineclass(nil, static, static_props, static_events, instance, instance_props, instance_events);
	end,
};


Mandelbrot.__define_class();

--Mandelbrot.Exec();
