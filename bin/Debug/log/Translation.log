============<<<Translation Error:test>>>============
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s let v3 = v1.Value let v4 = v3.ToString().Split(' ') from vvvv in (from v2 in v2s select v2) where !string.IsNullOrEmpty(v1.ToString()) select v1.ToString() ] location: test.cs: (89,17)-(89,187)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v2 in v2s select v2 ] location: test.cs: (89,98)-(89,122)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s join v2 in v2s on v1.Key equals v2.Key into ttt0 select new { v1 = v1, v2 = ttt0.Count() } into ttt group ttt by ttt.v2 ] location: test.cs: (90,17)-(90,151)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v in vs from vv in new[] { v, v + 1, v + 2, v + 3 } let v2 = v + 1 where v > 1 let v3 = v2 + 1 where v > 4 where v < 8 select new { v1 = v, v2 = v2, v3 = v3 } ] location: test.cs: (96,17)-(96,180)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for InvocationExpressionSyntax]>>> Can't determine symbol: None, code:[ ir.Test() ] location: test.cs: (506,16)-(506,25)
============<<<Translation Error:test>>>============
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s let v3 = v1.Value let v4 = v3.ToString().Split(' ') from vvvv in (from v2 in v2s select v2) where !string.IsNullOrEmpty(v1.ToString()) select v1.ToString() ] location: test.cs: (89,17)-(89,187)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v2 in v2s select v2 ] location: test.cs: (89,98)-(89,122)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s join v2 in v2s on v1.Key equals v2.Key into ttt0 select new { v1 = v1, v2 = ttt0.Count() } into ttt group ttt by ttt.v2 ] location: test.cs: (90,17)-(90,151)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v in vs from vv in new[] { v, v + 1, v + 2, v + 3 } let v2 = v + 1 where v > 1 let v3 = v2 + 1 where v > 4 where v < 8 select new { v1 = v, v2 = v2, v3 = v3 } ] location: test.cs: (96,17)-(96,180)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for InvocationExpressionSyntax]>>> Can't determine symbol: None, code:[ ir.Test() ] location: test.cs: (506,16)-(506,25)
============<<<Translation Error:test>>>============
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s let v3 = v1.Value let v4 = v3.ToString().Split(' ') from vvvv in (from v2 in v2s select v2) where !string.IsNullOrEmpty(v1.ToString()) select v1.ToString() ] location: test.cs: (89,17)-(89,187)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v2 in v2s select v2 ] location: test.cs: (89,98)-(89,122)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s join v2 in v2s on v1.Key equals v2.Key into ttt0 select new { v1 = v1, v2 = ttt0.Count() } into ttt group ttt by ttt.v2 ] location: test.cs: (90,17)-(90,151)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v in vs from vv in new[] { v, v + 1, v + 2, v + 3 } let v2 = v + 1 where v > 1 let v3 = v2 + 1 where v > 4 where v < 8 select new { v1 = v, v2 = v2, v3 = v3 } ] location: test.cs: (96,17)-(96,180)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for InvocationExpressionSyntax]>>> Can't determine symbol: None, code:[ ir.Test() ] location: test.cs: (506,16)-(506,25)
============<<<Translation Error:test>>>============
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s let v3 = v1.Value let v4 = v3.ToString().Split(' ') from vvvv in (from v2 in v2s select v2) where !string.IsNullOrEmpty(v1.ToString()) select v1.ToString() ] location: test.cs: (89,17)-(89,187)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v2 in v2s select v2 ] location: test.cs: (89,98)-(89,122)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v1 in v1s join v2 in v2s on v1.Key equals v2.Key into ttt0 select new { v1 = v1, v2 = ttt0.Count() } into ttt group ttt by ttt.v2 ] location: test.cs: (90,17)-(90,151)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for QueryExpressionSyntax]>>> [code:[ from v in vs from vv in new[] { v, v + 1, v + 2, v + 3 } let v2 = v + 1 where v > 1 let v3 = v2 + 1 where v > 4 where v < 8 select new { v1 = v, v2 = v2, v3 = v3 } ] location: test.cs: (96,17)-(96,180)]Cs2Lua can't support LINQ, use -enablelinq remove this error! (c# LINQ syntax will translate to use lua LINQ class in utility.lua)
<<<[Log for InvocationExpressionSyntax]>>> Can't determine symbol: None, code:[ ir.Test() ] location: test.cs: (506,16)-(506,25)
